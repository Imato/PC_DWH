/*
Deployment script for pc_dwh

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "pc_dwh"
:setvar DefaultFilePrefix "pc_dwh"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Creating [fact_2011]...';


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILEGROUP [fact_2011];


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILE (NAME = [fact_2011_65C5E875], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_fact_2011_65C5E875.mdf') TO FILEGROUP [fact_2011];


GO
PRINT N'Creating [fact_2012]...';


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILEGROUP [fact_2012];


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILE (NAME = [fact_2012_54F0B379], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_fact_2012_54F0B379.mdf') TO FILEGROUP [fact_2012];


GO
PRINT N'Creating [fact_2013]...';


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILEGROUP [fact_2013];


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILE (NAME = [fact_2013_4748419A], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_fact_2013_4748419A.mdf') TO FILEGROUP [fact_2013];


GO
PRINT N'Creating [fact_2014]...';


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILEGROUP [fact_2014];


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILE (NAME = [fact_2014_71BBAE6], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_fact_2014_71BBAE6.mdf') TO FILEGROUP [fact_2014];


GO
PRINT N'Creating [fact_2015]...';


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILEGROUP [fact_2015];


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILE (NAME = [fact_2015_6F1BCBC4], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_fact_2015_6F1BCBC4.mdf') TO FILEGROUP [fact_2015];


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key a4893820-8165-4321-ad1a-73de343e015f is skipped, element [dbo].[supplier].[Id] (SqlSimpleColumn) will not be renamed to suplier_id';


GO
PRINT N'Rename refactoring operation with key 0abf039b-2987-4760-874a-037ec1c33a23 is skipped, element [dbo].[supplier].[redion_name] (SqlSimpleColumn) will not be renamed to region_name';


GO
PRINT N'Rename refactoring operation with key 51550db1-0bf7-454d-bdc9-1c461d705d9d, bbedb57d-9a6a-47c5-89c3-06a8de3c730f is skipped, element [dbo].[hardware_type].[Id] (SqlSimpleColumn) will not be renamed to hardware_type_id';


GO
PRINT N'Rename refactoring operation with key 483081df-e3a7-4535-a441-26414e0743b1 is skipped, element [dbo].[hardware].[Id] (SqlSimpleColumn) will not be renamed to hardware_id';


GO
PRINT N'Rename refactoring operation with key 7b1444cf-a100-4fd1-b9cc-e18625ed2fad is skipped, element [dbo].[hardware].[barcode] (SqlSimpleColumn) will not be renamed to hardware_barcode';


GO
PRINT N'Rename refactoring operation with key 03fd03f4-6bf3-4eec-bf1d-a65ba0f6a3aa is skipped, element [dbo].[model].[Id] (SqlSimpleColumn) will not be renamed to model_id';


GO
PRINT N'Rename refactoring operation with key 211621b8-fdb5-4681-b70a-8a5bc8471124 is skipped, element [dbo].[hardware].[ix_hardware_type] (SqlIndex) will not be renamed to [ix_hardware_type_id]';


GO
PRINT N'Rename refactoring operation with key be92e7af-0c50-4933-b6e4-44867e17b943 is skipped, element [dbo].[part].[Id] (SqlSimpleColumn) will not be renamed to part_id';


GO
PRINT N'Creating [rs]...';


GO
CREATE SCHEMA [rs]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [pf_date_year]...';


GO
CREATE PARTITION FUNCTION [pf_date_year](DATE)
    AS RANGE
    FOR VALUES ('20120101', '20130101', '20140101', '20150101');


GO
PRINT N'Creating [ps_date_year]...';


GO
CREATE PARTITION SCHEME [ps_date_year]
    AS PARTITION [pf_date_year]
    TO ([fact_2011], [fact_2012], [fact_2013], [fact_2014], [fact_2015]);


GO
PRINT N'Creating [dbo].[dim_hardware]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[dim_hardware] (
    [hardware_id]      INT            NOT NULL,
    [hardware_barcode] VARCHAR (14)   NOT NULL,
    [hardware_name]    NVARCHAR (255) NOT NULL,
    [hardware_type_id] SMALLINT       NOT NULL,
    [supplier_id]      SMALLINT       NOT NULL,
    PRIMARY KEY CLUSTERED ([hardware_id] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[dim_hardware].[ix_hardware_barcode]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [ix_hardware_barcode]
    ON [dbo].[dim_hardware]([hardware_barcode] ASC);


GO
PRINT N'Creating [dbo].[dim_hardware].[ix_hardware_type_id]...';


GO
CREATE NONCLUSTERED INDEX [ix_hardware_type_id]
    ON [dbo].[dim_hardware]([hardware_type_id] ASC);


GO
PRINT N'Creating [dbo].[dim_hardware].[ix_hardware_supplier_id]...';


GO
CREATE NONCLUSTERED INDEX [ix_hardware_supplier_id]
    ON [dbo].[dim_hardware]([supplier_id] ASC);


GO
PRINT N'Creating [dbo].[dim_hardware_type]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[dim_hardware_type] (
    [hardware_type_id]   SMALLINT       NOT NULL,
    [hardware_type_name] NVARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([hardware_type_id] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[dim_model]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[dim_model] (
    [model_id]      SMALLINT       NOT NULL,
    [model_name]    NVARCHAR (255) NOT NULL,
    [model_barcode] VARCHAR (14)   NOT NULL,
    [create_date]   DATE           NOT NULL,
    PRIMARY KEY CLUSTERED ([model_id] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[dim_model].[ix_dim_model_barcode]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [ix_dim_model_barcode]
    ON [dbo].[dim_model]([model_barcode] ASC);


GO
PRINT N'Creating [dbo].[dim_part]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[dim_part] (
    [part_id]   INT           NOT NULL,
    [part_date] SMALLDATETIME NOT NULL,
    PRIMARY KEY CLUSTERED ([part_id] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[dim_sales_type]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[dim_sales_type] (
    [sales_type_id]   SMALLINT     NOT NULL,
    [sales_type_name] VARCHAR (25) NOT NULL,
    PRIMARY KEY CLUSTERED ([sales_type_id] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[dim_supplier]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[dim_supplier] (
    [supplier_id]   SMALLINT       NOT NULL,
    [supplier_name] NVARCHAR (255) NOT NULL,
    [country_name]  NVARCHAR (150) NOT NULL,
    [region_name]   NVARCHAR (150) NOT NULL,
    PRIMARY KEY CLUSTERED ([supplier_id] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[fact_manufacture]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[fact_manufacture] (
    [day_id]      DATE     NOT NULL,
    [part_id]     INT      NOT NULL,
    [model_id]    SMALLINT NOT NULL,
    [purchase_id] INT      NOT NULL,
    [hardware_id] INT      NOT NULL,
    [supplier_id] SMALLINT NOT NULL,
    [cost]        MONEY    NOT NULL
) ON [ps_date_year] ([day_id]);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[fact_purchase]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[fact_purchase] (
    [day_id]      DATE     NOT NULL,
    [purchase_id] INT      NOT NULL,
    [hardware_id] INT      NOT NULL,
    [supplier_id] SMALLINT NOT NULL,
    [cost]        MONEY    NOT NULL
) ON [ps_date_year] ([day_id]);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[fact_sales]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[fact_sales] (
    [day_id]        DATE     NOT NULL,
    [time_id]       TIME (0) NOT NULL,
    [model_id]      SMALLINT NOT NULL,
    [part_id]       INT      NOT NULL,
    [customer_id]   INT      NOT NULL,
    [sales_type_id] SMALLINT NOT NULL,
    [cost]          MONEY    NOT NULL,
    [gross_sales]   MONEY    NOT NULL
) ON [ps_date_year] ([day_id]);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[fk_hardware_supplier]...';


GO
ALTER TABLE [dbo].[dim_hardware] WITH NOCHECK
    ADD CONSTRAINT [fk_hardware_supplier] FOREIGN KEY ([supplier_id]) REFERENCES [dbo].[dim_supplier] ([supplier_id]);


GO
PRINT N'Creating [dbo].[fk_dim_hardware_type]...';


GO
ALTER TABLE [dbo].[dim_hardware] WITH NOCHECK
    ADD CONSTRAINT [fk_dim_hardware_type] FOREIGN KEY ([hardware_type_id]) REFERENCES [dbo].[dim_hardware_type] ([hardware_type_id]);


GO
PRINT N'Creating [dbo].[fact_manufacture_hardware]...';


GO
ALTER TABLE [dbo].[fact_manufacture] WITH NOCHECK
    ADD CONSTRAINT [fact_manufacture_hardware] FOREIGN KEY ([hardware_id]) REFERENCES [dbo].[dim_hardware] ([hardware_id]);


GO
PRINT N'Creating [dbo].[fact_manufacture_supplier]...';


GO
ALTER TABLE [dbo].[fact_manufacture] WITH NOCHECK
    ADD CONSTRAINT [fact_manufacture_supplier] FOREIGN KEY ([supplier_id]) REFERENCES [dbo].[dim_supplier] ([supplier_id]);


GO
PRINT N'Creating [dbo].[fk_fact_manufacture_model]...';


GO
ALTER TABLE [dbo].[fact_manufacture] WITH NOCHECK
    ADD CONSTRAINT [fk_fact_manufacture_model] FOREIGN KEY ([model_id]) REFERENCES [dbo].[dim_model] ([model_id]);


GO
PRINT N'Creating [dbo].[fk_fact_manufacture_part]...';


GO
ALTER TABLE [dbo].[fact_manufacture] WITH NOCHECK
    ADD CONSTRAINT [fk_fact_manufacture_part] FOREIGN KEY ([part_id]) REFERENCES [dbo].[dim_part] ([part_id]);


GO
PRINT N'Creating [dbo].[fact_purchase_cost_hardware]...';


GO
ALTER TABLE [dbo].[fact_purchase] WITH NOCHECK
    ADD CONSTRAINT [fact_purchase_cost_hardware] FOREIGN KEY ([hardware_id]) REFERENCES [dbo].[dim_hardware] ([hardware_id]);


GO
PRINT N'Creating [dbo].[fact_purchase_cost_supplier]...';


GO
ALTER TABLE [dbo].[fact_purchase] WITH NOCHECK
    ADD CONSTRAINT [fact_purchase_cost_supplier] FOREIGN KEY ([supplier_id]) REFERENCES [dbo].[dim_supplier] ([supplier_id]);


GO
PRINT N'Creating [dbo].[fact_sales_model]...';


GO
ALTER TABLE [dbo].[fact_sales] WITH NOCHECK
    ADD CONSTRAINT [fact_sales_model] FOREIGN KEY ([model_id]) REFERENCES [dbo].[dim_model] ([model_id]);


GO
PRINT N'Creating [dbo].[fact_sales_part]...';


GO
ALTER TABLE [dbo].[fact_sales] WITH NOCHECK
    ADD CONSTRAINT [fact_sales_part] FOREIGN KEY ([part_id]) REFERENCES [dbo].[dim_part] ([part_id]);


GO
PRINT N'Creating [dbo].[fact_sales_sales_type]...';


GO
ALTER TABLE [dbo].[fact_sales] WITH NOCHECK
    ADD CONSTRAINT [fact_sales_sales_type] FOREIGN KEY ([sales_type_id]) REFERENCES [dbo].[dim_sales_type] ([sales_type_id]);


GO
PRINT N'Creating [dbo].[fact_manufacture_cost]...';


GO
ALTER TABLE [dbo].[fact_manufacture] WITH NOCHECK
    ADD CONSTRAINT [fact_manufacture_cost] CHECK (cost >= 0);


GO
PRINT N'Creating [dbo].[ck_fact_purchase_cost]...';


GO
ALTER TABLE [dbo].[fact_purchase] WITH NOCHECK
    ADD CONSTRAINT [ck_fact_purchase_cost] CHECK (cost >= 0);


GO
PRINT N'Creating [dbo].[fact_sales_cost]...';


GO
ALTER TABLE [dbo].[fact_sales] WITH NOCHECK
    ADD CONSTRAINT [fact_sales_cost] CHECK (cost >= 0);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a4893820-8165-4321-ad1a-73de343e015f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a4893820-8165-4321-ad1a-73de343e015f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0abf039b-2987-4760-874a-037ec1c33a23')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0abf039b-2987-4760-874a-037ec1c33a23')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '51550db1-0bf7-454d-bdc9-1c461d705d9d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('51550db1-0bf7-454d-bdc9-1c461d705d9d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bbedb57d-9a6a-47c5-89c3-06a8de3c730f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bbedb57d-9a6a-47c5-89c3-06a8de3c730f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '483081df-e3a7-4535-a441-26414e0743b1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('483081df-e3a7-4535-a441-26414e0743b1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7b1444cf-a100-4fd1-b9cc-e18625ed2fad')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7b1444cf-a100-4fd1-b9cc-e18625ed2fad')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '03fd03f4-6bf3-4eec-bf1d-a65ba0f6a3aa')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('03fd03f4-6bf3-4eec-bf1d-a65ba0f6a3aa')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '211621b8-fdb5-4681-b70a-8a5bc8471124')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('211621b8-fdb5-4681-b70a-8a5bc8471124')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'be92e7af-0c50-4933-b6e4-44867e17b943')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('be92e7af-0c50-4933-b6e4-44867e17b943')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[dim_hardware] WITH CHECK CHECK CONSTRAINT [fk_hardware_supplier];

ALTER TABLE [dbo].[dim_hardware] WITH CHECK CHECK CONSTRAINT [fk_dim_hardware_type];

ALTER TABLE [dbo].[fact_manufacture] WITH CHECK CHECK CONSTRAINT [fact_manufacture_hardware];

ALTER TABLE [dbo].[fact_manufacture] WITH CHECK CHECK CONSTRAINT [fact_manufacture_supplier];

ALTER TABLE [dbo].[fact_manufacture] WITH CHECK CHECK CONSTRAINT [fk_fact_manufacture_model];

ALTER TABLE [dbo].[fact_manufacture] WITH CHECK CHECK CONSTRAINT [fk_fact_manufacture_part];

ALTER TABLE [dbo].[fact_purchase] WITH CHECK CHECK CONSTRAINT [fact_purchase_cost_hardware];

ALTER TABLE [dbo].[fact_purchase] WITH CHECK CHECK CONSTRAINT [fact_purchase_cost_supplier];

ALTER TABLE [dbo].[fact_sales] WITH CHECK CHECK CONSTRAINT [fact_sales_model];

ALTER TABLE [dbo].[fact_sales] WITH CHECK CHECK CONSTRAINT [fact_sales_part];

ALTER TABLE [dbo].[fact_sales] WITH CHECK CHECK CONSTRAINT [fact_sales_sales_type];

ALTER TABLE [dbo].[fact_manufacture] WITH CHECK CHECK CONSTRAINT [fact_manufacture_cost];

ALTER TABLE [dbo].[fact_purchase] WITH CHECK CHECK CONSTRAINT [ck_fact_purchase_cost];

ALTER TABLE [dbo].[fact_sales] WITH CHECK CHECK CONSTRAINT [fact_sales_cost];


GO
PRINT N'Update complete.';


GO
