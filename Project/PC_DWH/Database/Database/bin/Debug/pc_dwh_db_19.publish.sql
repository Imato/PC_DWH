/*
Deployment script for pc_dwh

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "pc_dwh"
:setvar DefaultFilePrefix "pc_dwh"
:setvar DefaultDataPath "C:\Data\SQL\Data\"
:setvar DefaultLogPath "C:\Data\SQL\Data\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

/*
use master 
go

drop database [pc_dwh]
go

CREATE DATABASE [pc_dwh]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'pc_dwh', FILENAME = N'$(DataPath)\pc_dwh.mdf' , SIZE = 15360KB , FILEGROWTH = 10%)
 LOG ON 
( NAME = N'pc_dwh_log', FILENAME = N'$(LogPath)\pc_dwh_log.ldf' , SIZE = 15360KB , FILEGROWTH = 10%)
GO
ALTER DATABASE [pc_dwh] SET COMPATIBILITY_LEVEL = 120
GO
ALTER DATABASE [pc_dwh] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [pc_dwh] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [pc_dwh] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [pc_dwh] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [pc_dwh] SET ARITHABORT OFF 
GO
ALTER DATABASE [pc_dwh] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [pc_dwh] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [pc_dwh] SET AUTO_CREATE_STATISTICS ON
GO
ALTER DATABASE [pc_dwh] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [pc_dwh] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [pc_dwh] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [pc_dwh] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [pc_dwh] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [pc_dwh] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [pc_dwh] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [pc_dwh] SET  DISABLE_BROKER 
GO
ALTER DATABASE [pc_dwh] SET AUTO_UPDATE_STATISTICS_ASYNC ON 
GO
ALTER DATABASE [pc_dwh] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [pc_dwh] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [pc_dwh] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [pc_dwh] SET  READ_WRITE 
GO
ALTER DATABASE [pc_dwh] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [pc_dwh] SET  MULTI_USER 
GO
ALTER DATABASE [pc_dwh] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [pc_dwh] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
ALTER DATABASE [pc_dwh] SET DELAYED_DURABILITY = DISABLED 
GO
USE [pc_dwh]
GO
IF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [pc_dwh] MODIFY FILEGROUP [PRIMARY] DEFAULT
GO
*/
GO

GO
PRINT N'Creating [rs].[dim_calendar]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
create view [rs].[dim_calendar]
as
select day_id, day_name, month_key, month_name, year_key, year_name
from [dbo].[dim_calendar]
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
BACKUP DATABASE [pc_dwh] TO  DISK = N'C:\Data\SQL\Projects\PC_DWH\DB\pc_dwh.bak' WITH NOFORMAT, INIT,  NAME = N'pc_dwh-Full Database Backup', SKIP, NOREWIND, NOUNLOAD,  STATS = 10
GO

GO
PRINT N'Update complete.';


GO
